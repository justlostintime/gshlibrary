'noalias
Sub expandfn(path As String) As String ' resolve path to absolute path
''returns a relative path made into absolute path

Extern glob(Pattern As String, flags As Integer, ErrorCallback As Pointer, glob_def As Glob_t) As Integer In "libc:6"
Extern globfree(glob_def As Glob_t) In "libc:6"
Extern chdir(Dest As String) As Integer In "libc:6"

Dim GLOB_ERR As Integer = &h0001              ' Return On Read errors. * /
Dim GLOB_MARK As Integer = &h0002              ' Append a slash To Each name. * /
Dim GLOB_NOSORT As Integer = &h0004              ' Don 't sort the names.  */
Dim GLOB_DOOFFS As Integer = &h0008             ' Insert PGLOB - > gl_offs NULLs. * /
Dim GLOB_NOCHECK As Integer = &h0010             ' If nothing matches, Return the pattern. * /
Dim GLOB_APPEND As Integer = &h0020              ' Append To results Of a previous call. * /
Dim GLOB_NOESCAPE As Integer = &h0040              ' Backslashes don 't quote metacharacters.  */
Dim GLOB_PERIOD As Integer = &h0080              ' Leading `.' can be matched by metachars.  */
Dim GLOB_MAGCHAR As Integer = &h0100             ' Set In gl_flags If any metachars seen. * /
Dim GLOB_ALTDIRFUNC As Integer = &h0200              ' Use gl_opendir et al functions. * /
Dim GLOB_BRACE As Integer = &h0400              ' Expand "{a,b}" To "a" "b". * /
Dim GLOB_NOMAGIC As Integer = &h0800              ' If no magic chars, Return the pattern. * /
Dim GLOB_TILDE As Integer = &h1000              ' Expand ~user and ~ to home directories. */
Dim GLOB_ONLYDIR As Integer = &h2000           ' Match only directories. * /
Dim GLOB_TILDE_CHECK As Integer = &h4000

dim globerrors As String[] = ["System Call error","No error", "Out Of Memory", "Read Error", "No Matches", "Not Implemented"]
Dim Paths As New String[]
Dim sret As New Glob_t
Dim ReturnSet As Pointer
Dim CallResult As Integer
Dim flags as integer = (GLOB_TILDE Or GLOB_MARK Or GLOB_NOCHECK Or GLOB_BRACE)

chdir(env["PWD"])
CallResult = glob(path, flags, Null, sret)
If Callresult <> 0 Then
	print #file.err, "File Expansion Error :" & globerrors[CallResult+1]
	return ""
Endif
ReturnSet = sret.gl_pathv
For i As Integer = 0 To sret.gl_pathc - 1
	Paths.Add(String@(Pointer@(ReturnSet + (SizeOf(gb.pointer) * i))))
Next
globfree(sret)
Dim results As String[] = paths
Dim newdir As String = results[0]
If results.count > 1 Then
   error.raise("Ambiguous request: More Than One solution to "&path)
endif
Dim name As String = File.Name(newdir)
newdir = File.Dir(newdir)

if newdir = "" then newdir = env["PWD"]

Dim sPath As String = Trim(newdir)

Dim sPathSplit As String[] = Split(newdir, "/", "", True)
Dim pwds As New String[]
If file.isrelative(sPath) Then pwds.insert(Split(env["PWD"], "/", "", True))
For Each Sdir As String In sPathSplit
	Select Case SDir
		Case "~"
			If pwds.count = 0 Then pwds.insert(Split(user.home, "/", "", True))
		Case "."
			If pwds.count = 0 Then pwds.insert(Split(env["PWD"], "/", "", True))
		Case ".."
			If pwds.count > 0 Then pwds.remove(pwds.max)
		Default
			pwds.add(sdir)
	End Select
	If Not Exist("/" & pwds.join("/")) Then
		error.raise("Directory Not Found :[" & "/" & pwds.join("/") & "]")
	Endif
Next
dim result as string = "/" & PWDs.join("/") &/ name
Return result
End
