Sub clearsubs(...) ' clear all or some of the subs/func/proc from the image
''clearsubs(<name of sub >,...) clears subs from memory
''clearsubs <name of sub> ...     ' command line format
''          Does not delete the sub from disk
''          if no parameters than clear all
''          if parameters remove each from memory
''          prompt for each unsaved user altered system sub
''          prompt for each user created sub, not saved yet

if param.count <> 0 then
  for each subname as string in param
    if sharedmem.exist("sub."&subname) then
        print #file.err, "Clear Sub/Procedure/Function :" ;;subname
        sharedmem.free("sub."&subname)
    else
        print #file.err, "Sub/function/procedure not found :";;subname
    endif
  next
  return
endif

' Here is where we will use lany to save the sub
Dim allSubs as collection
Dim allIndex as new string[]
Dim answer as string = "n"
allSubs = lany("sub","subs")
for each sEntry as string[] in allSubs
 if allSubs.key = "update" then continue
 if sEntry[eSubInMem] = "In-Mem" then
   allIndex.add(allsubs.key)
   ' print "In memory :";;sEntry[eSubPath]
   if sEntry[eSubSource] = "In-Mem" then
     error "Clearsub: Sub '";AllSubs.key;"' Not Saved, Do You want to save it now Y/n?";
     line input Answer 
     if trim(answer)[0] == "n" then
        error "Clearsubs: Sub not saved ";allsubs.key
     else
        savesubs(allsubs.key)
        error  "Clearsubs: Sub Saved ";allsubs.key
     endif
   else if  sEntry[eSubSource] <> "Default" and if file.load(sEntry[eSubPath]) <> sharedmem["sub."&allsubs.key] then
     error "Clearsub";;sentry[eSubSource];" '";allsubs.key;"' Has changed, Would you like to save it Y/n?";
     line input answer
     if trim(answer)[0] == "n" then
       error "ClearSubs: Changed Sub Not Saved ";allsubs.key
     else
       savesubs(allsubs.key)
       error "Clearsubs:  Changed Sub Saved ";allsubs.key
     endif
   endif
   error "Clearsub:";;allsubs.key;;" removed from memory"
   sharedmem.free("sub."&allSubs.key)
 endif

next

catch
 print #file.err, "Error :";;error.text;; error.where

end
enum eSubSource, eSubPath, eSubName, eSubInMem