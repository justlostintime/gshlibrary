Sub resetenv() As Boolean ' reset the gsh environment
''ResetEnv  Reset the current image to default
''          You must call save or quit to save this image to disk
''          function resetenv()
''          command resetenv
''          returns true if found, false otherwise
''          $result contains the error text or "OK"
With sharedmem
.["execprog"] = "print \"Gambas Shell \""
.["blockindent"] = ""                          ' used to indent code as you enter a block of code
.["prompt"] = "\"\\x1b[31m\" & user.name & \"@\" & system.host & \":\\x1b[32m\" & env[\"PWD\"] & \"$\\x1b[0m\" & gsh.blockindent"
.["result"] = "OK"
.["maxhistory"] = 300    ' define the max history length
.["historycurrent"] = 0  ' defines the current history level
.["pwd"] = user.home
.["history"] = new collection
.["editor"] = "/bin/nano"
.["home"] = user.home
.["hosttype"] = system.Architecture
.["hostname"] = system.host
.["term"] = "xterm-256color"
.["path"] = user.home &/ ".local/bin:"&user.home &/ "bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games"
.["env"] = ["PWD="&.["pwd"], "PATH="&.["path"],"HOME="&.["home"],"TERM="&.["term"],"HOSTTYPE="&.["hosttype"],"HOSTHAME="&.["hostname"],"LASTPLACEONEARTH=EndOfTheEarth"]
if not .exist("trace") then
.["trace"] = False
endif
Try shell user.home &/ "vars/profile.gsh" Wait
If Error Then
.["result"] = error.text
Print #file.err,"resetenv : profile.gsh - "; error.text
Return False
Endif
.["result"] = "OK"
End With
Return True
End
